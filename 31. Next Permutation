class Solution:
    def nextPermutation(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        Runtime: 38 ms, faster than 96.07% of Python3 online submissions for Next Permutation.
        Memory Usage: 13.9 MB, less than 76.88% of Python3 online submissions for Next Permutation.
        """
        a =0
        b = a 
        
        p = len(nums)-1
        while p >0:
            
            if nums[p]>nums[p-1]:
                #print(nums[p],nums[p-1])
                a = p-1
                break
            p-=1
        
        
        p = len(nums)-1
        while p >=0:
            if nums[p]>nums[a]:
                
                #print(nums[p])
                break
            p-=1
        
        b = p
        
        # swap
        temp = nums[a]
        nums[a] = nums[b]
        nums[b] = temp 
        
        
        new_nums = nums[:a+1]+sorted(nums[a+1:])
        for i in range(len(nums)):
            nums[i]=new_nums[i]
